#!/bin/sh
# Copyright (c) 2000-2015 Synology Inc. All rights reserved.

[ "$SYNOPKG_PKG_STATUS" = UPGRADE ] && exit 0

. "$(dirname $0)"/common
. "$ETC_PATH"/config

/usr/syno/bin/synowebapi --exec api=SYNO.Docker.Container version=1 method=delete name=synology_gitlab_redis force=true preserve_profile=false
/usr/syno/bin/synowebapi --exec api=SYNO.Docker.Container version=1 method=delete name=synology_gitlab force=true preserve_profile=false

docker rmi quay.io/sameersbn/redis:$REDIS_VERSION
docker rmi quay.io/sameersbn/gitlab:$GITLAB_VERSION

if [ "$pkgwizard_delete_data" = true ]; then
	
	SQL_DROP_USER="DROP USER '$DB_USER'@'%';"
	SQL_DROP_USER_LOCAL="DROP USER '$DB_USER'@'localhost';"
	SQL_DROP_DATABASE="DROP DATABASE \`$DB_NAME\`;"

	if ! echo $SQL_DROP_USER | mysql -uroot -p"$pkgwizard_mysql_password"; then
		logger -p 0 "$PKG_NAME: failed to remove user $DB_USER"
		log "$failed_remove_db_user" "$DB_USER"
	fi

	if ! echo $SQL_DROP_USER_LOCAL | mysql -uroot -p"$pkgwizard_mysql_password"; then
		logger -p 0 "$PKG_NAME: failed to remove local user $DB_USER"
		log "$failed_remove_db_user" "$DB_USER"
	fi
	
	if ! echo $SQL_DROP_DATABASE | mysql -uroot -p"$pkgwizard_mysql_password"; then
		logger -p 0 "$PKG_NAME: failed to remove the database $DB_NAME"
		log "$failed_remove_db" "$DB_NAME"
	fi

	if ! rm -Rf "$SHARE_PATH/$SHARE"; then
		logger -p 0 "$PKG_NAME: failed to remove the folder $SHARE"
		log "$failed_remove_dir" "$SHARE"
	fi

	rm "$ETC_PATH"/config
fi

exit 0
